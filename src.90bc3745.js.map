{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","timerId","document","querySelector","secs","mins","hours","days","getTimeRemaining","initTimer","time","Date","parse","Math","floor","setInterval","t","textContent","clearInterval","console","log","timer1","timer2"],"mappings":";;;AAwDA,aAxDA,QAAA,oBAEA,MAAMA,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBC,KAAAA,QAAU,KACVD,KAAAA,WAAaA,EACbD,KAAAA,SAAWG,SAASC,cAAcJ,GAClCK,KAAAA,KAAO,KAAKL,SAASI,cAAc,uBACnCE,KAAAA,KAAO,KAAKN,SAASI,cAAc,uBACnCG,KAAAA,MAAQ,KAAKP,SAASI,cAAc,wBACpCI,KAAAA,KAAO,KAAKR,SAASI,cAAc,uBAEnCK,KAAAA,mBACAC,KAAAA,YAGPD,mBACQE,MAAAA,EAAOC,KAAKC,MAAM,KAAKZ,YAAcW,KAAKC,MAAM,IAAID,MAKnD,MAAA,CACLD,KAAAA,EACAH,KANWM,KAAKC,MAAMJ,EAAQ,OAO9BJ,MANYO,KAAKC,MAAOJ,EAAQ,MAAyB,MAOzDL,KANWQ,KAAKC,MAAOJ,EAAQ,KAAoB,KAOnDN,KANWS,KAAKC,MAAOJ,EAAQ,IAAc,MAUjDD,YACOR,KAAAA,QAAUc,YAAY,KACnBC,MAAAA,EAAI,KAAKR,mBACVJ,KAAAA,KAAKa,YAAcD,EAAEZ,KAAO,OAASY,EAAEZ,OAASY,EAAEZ,KAClDC,KAAAA,KAAKY,YAAcD,EAAEX,KAAO,OAASW,EAAEX,OAASW,EAAEX,KAClDC,KAAAA,MAAMW,YAAcD,EAAEV,MAAQ,OAASU,EAAEV,QAAUU,EAAEV,MACrDC,KAAAA,KAAKU,YAAcD,EAAET,KAAO,OAASS,EAAET,OAASS,EAAET,KAEnDS,EAAEN,MAAQ,IACZQ,cAAc,KAAKjB,SACdG,KAAAA,KAAKa,YAAc,KACnBZ,KAAAA,KAAKY,YAAc,KACnBX,KAAAA,MAAMW,YAAc,KACpBV,KAAAA,KAAKU,YAAc,KACxBE,QAAQC,IAAI,gDAEb,MAIP,MAAMC,EAAS,IAAIxB,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIW,KAAK,kBAGjBW,EAAS,IAAIzB,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIW,KAAK","file":"src.90bc3745.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.timerId = null;\n    this.targetDate = targetDate;\n    this.selector = document.querySelector(selector);\n    this.secs = this.selector.querySelector(\"[data-value='secs']\");\n    this.mins = this.selector.querySelector(\"[data-value='mins']\");\n    this.hours = this.selector.querySelector(\"[data-value='hours']\");\n    this.days = this.selector.querySelector(\"[data-value='days']\");\n\n    this.getTimeRemaining();\n    this.initTimer();\n  }\n\n  getTimeRemaining() {\n    const time = Date.parse(this.targetDate) - Date.parse(new Date());\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n    return {\n      time,\n      days,\n      hours,\n      mins,\n      secs,\n    };\n  }\n\n  initTimer() {\n    this.timerId = setInterval(() => {\n      const t = this.getTimeRemaining();\n      this.secs.textContent = t.secs < 10 ? `0${t.secs}` : t.secs;\n      this.mins.textContent = t.mins < 10 ? `0${t.mins}` : t.mins;\n      this.hours.textContent = t.hours < 10 ? `0${t.hours}` : t.hours;\n      this.days.textContent = t.days < 10 ? `0${t.days}` : t.days;\n\n      if (t.time <= 0) {\n        clearInterval(this.timerId);\n        this.secs.textContent = '00';\n        this.mins.textContent = '00';\n        this.hours.textContent = '00';\n        this.days.textContent = '00';\n        console.log('targetDate должна быть больше текущей даты');\n      }\n    }, 1000);\n  }\n}\n\nconst timer1 = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2022'),\n});\n\nconst timer2 = new CountdownTimer({\n  selector: '#timer-2',\n  targetDate: new Date('Sep 26, 2022'),\n});\n"]}